# # Задачи семинара 4
# 1. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
#     *Пример:*
#     - Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}
'''
n = int(input('Введите натуральное число '))
dict = {}
for i in range(1,n+1):
    dict[i] = 3*i + 1 
print(dict)
'''
# 2. Задайте список(произвольный). Напишите программу, которая определит, присутствует ли в заданном списке строк некое число.
'''
list = [4, 7, 'red', 13, 16, 19, 'чис3ло', '3']
new_list = dict.values()
print(new_list)
n = input('Введите искомое число ')
count = 0
for i in list:
    i = str(i)
    if n in i:
        print("Да есть")
        count = 1
        break
if count == 0:
    print("Отсутствует")
'''

# 3. Напишите программу, которая определит позицию второго вхождения строки в списке либо сообщит, что её нет(по индексу).
# *Пример:*
# - список: ["qwe", "asd", "zxc", "qwe", "ertqwe"], ищем: "qwe", ответ: 3
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен", "йцу"], ищем: "йцу", ответ: 5
# - список: ["йцу", "фыв", "ячс", "цук", "йцукен"], ищем: "йцу", ответ: -1
# - список: ["123", "234", 123, "567"], ищем: "123", ответ: -1
# - список: [], ищем: "123", ответ: -1
'''
def second_in(list,find):
    count = 0
    for i in range(len(list)):
        if list[i] == find:
            count+=1
            if count == 2:
                return i
    return -1

list = ["qwe", "asd", "zxc", "qwe", "ertqwe"]
find = "qwe"
'''
# 4. Программа "Именной фильтр". Напишите функцию, которая принимает на вход список с именами людей и возвращает новый список с именами, которые начинаются на гласную букву. 
# В новом списке имя должно начинаться с прописной (большой) буквы, даже если изначально было написано со строчной(маленькой).
# *Пример:*
#  - Введите имена через пробел: Никонор иван Харитон Ульяна яков
# Функция вернула ['Иван', 'Ульяна', 'Яков']
'''
def filter(names):
    list = []
    for i in names:
        if i[0] in "аоуеияАОУЕИЯ":
        list.append(i)
    return list
names = input('Введите имена через пробел:').title().split()
print('Функция вернула имена:',filter(names))
'''

# 5. Программа "Среднее арифметическое". Введите целое число от 3 до 20 (число n). Запросите n вещественных чисел и сохраните их в список. 
# Вызовите функцию, которая принимает на вход список (один аргумент) и возвращает среднее арифметическое всех элементов списка. 
# Результат работы функции сохраните в переменную и выведите на экран.
# *Пример:*
# - Введите целое число от 3 до 20 3
# - Введите число номер 1: 4
# - Введите число номер 2: 5
# - Введите число номер 3: 6
# Введено чисел: 3
# Это числа: [4.0, 5.0, 6.0]
# Функция вернула среднее арифметическое:  5.0
'''
def math_average(list):
    sum = 0
    for i in list:
        sum+=i
    return sum / len(list)

n = int(input('Введите целое число от 3 до 20 '))
list = []

for i in range(n):
    list.append(float(input(f'Введите число номер {i+1}: ')))
print(list)
average = math_average(list)

print (average)
'''
# 6. Напишите программу, которая будет преобразовывать десятичное число в двоичное.
#     *Пример:*
#     - 45 -> 101101
#     - 3 -> 11
#     - 2 -> 10

# def decimalToBinary(n):
#     if(n > 1):
#         decimalToBinary(n//2)
#     print(n%2, end='')

# n = 45
# decimalToBinary(n)

def decimalToBinary(n):
    while (n > 1):
        n = n//2
        print(n, end='')
    print(n%2, end='')

n = 45
decimalToBinary(n)

# 7. Задайте число. Составьте список чисел Фибоначчи, в том числе для отрицательных индексов.
#     *Пример:*
#     - для k = 8 список будет выглядеть так: [-21 ,13, -8, 5, −3, 2, −1, 1, 0, 1, 1, 2, 3, 5, 8, 13, 21]
# https://ru.wikipedia.org/wiki/%D0%9D%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8#:~:text=%D0%92%20%D0%BC%D0%B0%D1%82%D0%B5%D0%BC%D0%B0%D1%82%D0%B8%D0%BA%D0%B5%2C%20%D1%87%D0%B8%D1%81%D0%BB%D0%B0%20%D0%BD%D0%B5%D0%B3%D0%B0%D1%84%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8%20%E2%80%94%20%D0%BE%D1%82%D1%80%D0%B8%D1%86%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%20%D0%B8%D0%BD%D0%B4%D0%B5%D0%BA%D1%81%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5%20%D1%8D%D0%BB%D0%B5%D0%BC%D0%B5%D0%BD%D1%82%D1%8B%20%D0%BF%D0%BE%D1%81%D0%BB%D0%B5%D0%B4%D0%BE%D0%B2%D0%B0%D1%82%D0%B5%D0%BB%D1%8C%D0%BD%D0%BE%D1%81%D1%82%D0%B8%20%D1%87%D0%B8%D1%81%D0%B5%D0%BB%20%D0%A4%D0%B8%D0%B1%D0%BE%D0%BD%D0%B0%D1%87%D1%87%D0%B8.



# 8. Задайте строку из набора чисел. Напишите программу, которая покажет большее и меньшее число. В качестве символа-разделителя используйте пробел.



# 9. Задайте два числа. Напишите программу, которая найдёт НОК (наименьшее общее кратное) этих двух чисел.