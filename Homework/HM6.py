# 12. Сформировать список из  N членов последовательности.
#     Для N = 5: 1, -3, 9, -27, 81 и т.д.

'''
N = int(input('Введите число N: ')) 
result = [((-3)**i) for i in range(N)]
print(result)
'''

# 13. Для натурального n создать словарь индекс-значение, состоящий из элементов последовательности 3n + 1.
#     Для n = 6: {1: 4, 2: 7, 3: 10, 4: 13, 5: 16, 6: 19}

'''
n = int(input('Введите число: '))
d = [((3*i) + 1) for i in range(1, n+1)]
d = dict(enumerate(d))
print (d)
'''

# 17. Задать список из n чисел последовательности (1+1/n)^n и вывести на экран их сумму

'''    
n = int(input('Введите число: '))
ls = [((1+1/i)**i) for i in range(1, n+1)]
sum = 0
for i in ls:
   sum += i
print(sum)
'''

# 21. Определить, присутствует ли в заданном списке строк, некоторое число

'''
spisok = ['123ds', '234', '5342', '3231', 'asd21f']
lk = '5'
res = [i for i in spisok if lk in i]
print(res)
'''

# 28. Строка содержит набор чисел. Показать большее и меньшее число
#     Символ-разделитель - пробел

'''
def Max(list1):
    list2 = list(map(int, list1.split()))
    return list2

list1 = input('Введите чилса через пробел: ')
result = Max(list1)
print(min(result), max(result))
'''

# 32. Составить список простых множителей натурального числа N
'''
n = int(input('Введите число: '))
k = [i for i in range(1, n+1) if n % i == 0]
print(k)
'''


# Задача из семинара
'''
lst = [1,23,543,23,4,5,6,7]
y = list(filter(lambda x: lst.count(x) == 1, lst))
print(y)
'''